<?xml version="1.0" encoding="UTF-8"?>   
<!-- 局部单元测试使用，不正式发布，不要删除 -->   
<beans xmlns="http://www.springframework.org/schema/beans"   
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"   
             xmlns:jee="http://www.springframework.org/schema/jee"   
             xmlns:aop="http://www.springframework.org/schema/aop"   
             xmlns:tx="http://www.springframework.org/schema/tx"   
             xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd   
                     http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-2.5.xsd   
                     http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd   
                     http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd">   
  
        <!--指定Spring配置中用到的属性文件-->   
        <bean id="propertyConfig"   
                    class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">   
                <property name="locations">   
                        <list>   
                                <value>classpath:jdbc.properties</value>   
                        </list>   
                </property>   
        </bean>   
       

<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close"> 
      <!-- 基本属性 url、user、password -->
      <property name="url" value="${jdbc.jdbcUrl}" />
      <property name="username" value="${jdbc.user}" />
      <property name="password" value="${jdbc.password}" />
      <!-- 配置初始化大小、最小、最大 -->
      <property name="initialSize" value="1" />
      <property name="minIdle" value="1" /> 
      <property name="maxActive" value="20" />

      <!-- 配置获取连接等待超时的时间 -->
      <property name="maxWait" value="60000" />

      <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
      <property name="timeBetweenEvictionRunsMillis" value="60000" />

      <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
      <property name="minEvictableIdleTimeMillis" value="300000" />

      <property name="validationQuery" value="SELECT 'x'" />
      <property name="testWhileIdle" value="true" />
      <property name="testOnBorrow" value="false" />
      <property name="testOnReturn" value="false" />

      <!-- 配置监控统计拦截的filters -->
      <property name="filters" value="stat" /> 
  </bean>
       <!-- 配置Spring事务管理 -->
	<bean id="txManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean> 
      
        <bean id="sqlMapClient"   
                    class="org.springframework.orm.ibatis.SqlMapClientFactoryBean">   
                <property name="dataSource">   
                        <ref local="dataSource"/>   
                </property>   
                <property name="configLocation">   
                        <value>classpath:spring/springbusiness/sql-map-config.xml</value>   
                </property>   
        </bean>   

        <bean id="sqlMapClientTemplate"   
                    class="org.springframework.orm.ibatis.SqlMapClientTemplate">   
                <property name="sqlMapClient" ref="sqlMapClient"/>   
        </bean> 

        <!-- 事务切面配置 -->   
        <aop:config>   
                <aop:pointcut id="serviceOperation"   
                                            expression="execution(* *..service*..*(..))"/>   
                <aop:advisor pointcut-ref="serviceOperation"   
                                         advice-ref="txAdvice"/>   
        </aop:config>   
        <!-- 通知配置 -->   
        <tx:advice id="txAdvice" transaction-manager="txManager">   
                <tx:attributes>   
                        <tx:method name="delete*" rollback-for="Exception" />   
                        <tx:method name="save*" rollback-for="Exception" />   
                        <tx:method name="update*" rollback-for="Exception" />   
                         <tx:method name="insert*" rollback-for="Exception"  />
                        <tx:method name="*" read-only="true" rollback-for="Exception" />   
                </tx:attributes>   
        </tx:advice>   
  
        
</beans>   